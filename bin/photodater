#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var ExifImage = require('exif').ExifImage;

var homePath = process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'];
var rootPath = process.argv[2] || path.join(homePath, 'Pictures');

if (!fs.existsSync(rootPath)) {
    console.log('Usage: photodater <targetFolder>\nRearranges *.JPG into YYYY-MM-DD folders');
    return;
}

var getFileDate = function (filePath, callback) {
    new ExifImage({ image: filePath }, function (err, data) {
        var date = data && data.exif && data.exif.CreateDate;
        if (date) {
            date = date.replace(':', '-').replace(':', '-');
        }
        callback(err, new Date(date));
    });
};

var pad = function (val) {
    if (val < 10) {
        return '0' + val;
    }
    return val;
};

fs.readdirSync(rootPath).filter(function (folder) {
    return folder.indexOf('20') !== 0 && fs.lstatSync(path.join(rootPath, folder)).isDirectory();
}).forEach(function (folder) {
    var folderPath = path.join(rootPath, folder);
    var files = fs.readdirSync(folderPath).filter(function (file) {
        return path.extname(file).toLowerCase() === '.jpg' && fs.lstatSync(path.join(folderPath, file)).isFile();
    }).forEach(function (file) {
        var filePath = path.join(folderPath, file);
        getFileDate(filePath, function (err, date) {
            if (!err && date) {
                var targetFolder = path.join(rootPath, date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' +
                    pad(date.getDate()));
                if (!fs.existsSync(targetFolder)) {
                    fs.mkdirSync(targetFolder);
                }
                fs.renameSync(filePath, path.join(targetFolder, file));
            }
        });
    });

});